name: Deploy Client and Server to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Amazon ECR
    - name: Log in to Amazon ECR
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

    # Build and Push Client Image to ECR
    - name: Build and push Client Docker image
      run: |
        docker build -t vethospital-client ./client
        docker tag vethospital-client:latest ${{ secrets.ECR_REPOSITORY_URI }}:client
        docker push ${{ secrets.ECR_REPOSITORY_URI }}:client

    # Build and Push Server Image to ECR
    - name: Build and push Server Docker image
      run: |
        docker build -t vethospital-server ./server
        docker tag vethospital-server:latest ${{ secrets.ECR_REPOSITORY_URI }}:server
        docker push ${{ secrets.ECR_REPOSITORY_URI }}:server
    # Deploy Docker containers to EC2
    - name: Deploy Client and Server to EC2
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
          # Log in to ECR
          $(aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }})

          # Pull and Run Client Image
          docker pull ${{ secrets.ECR_REPOSITORY_URI }}:client
          docker stop vethospital-client || true
          docker rm vethospital-client || true
          docker run -d --name vethospital-client -p 80:3000 ${{ secrets.ECR_REPOSITORY_URI }}:client

          # Pull and Run Server Image
          docker pull ${{ secrets.ECR_REPOSITORY_URI }}:server
          docker stop vethospital-server || true
          docker rm vethospital-server || true
          docker run -d --name vethospital-server -p 5000:5000 ${{ secrets.ECR_REPOSITORY_URI }}/:server
        EOF
